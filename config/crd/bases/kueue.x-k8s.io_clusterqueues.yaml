---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: clusterqueues.kueue.x-k8s.io
spec:
  group: kueue.x-k8s.io
  names:
    kind: ClusterQueue
    listKind: ClusterQueueList
    plural: clusterqueues
    singular: clusterqueue
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Cohort that this ClusterQueue belongs to
      jsonPath: .spec.cohort
      name: Cohort
      type: string
    - description: The queueing strategy used to prioritize workloads
      jsonPath: .spec.queueingStrategy
      name: Strategy
      priority: 1
      type: string
    - description: Number of pending workloads
      jsonPath: .status.pendingWorkloads
      name: Pending Workloads
      type: integer
    - description: Number of admitted workloads that haven't finished yet
      jsonPath: .status.admittedWorkloads
      name: Admitted Workloads
      priority: 1
      type: integer
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterQueue is the Schema for the clusterQueue API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterQueueSpec defines the desired state of ClusterQueue
            properties:
              cohort:
                description: "cohort that this ClusterQueue belongs to. QCs that belong
                  to the same cohort can borrow unused resources from each other.
                  \n A QC can be a member of a single borrowing cohort. A workload
                  submitted to a queue referencing this QC can borrow resources from
                  any QC in the cohort. Only resources listed in the QC can be borrowed
                  (see example). \n In the example below, the following applies: 1.
                  tenantB can run a workload consuming up to 20 k80 GPUs, meaning
                  a resource can be allocated from more than one clusterQueue in a
                  cohort. 2. tenantB can not consume any p100 GPUs or spot because
                  its QC has no quota defined for them, and so the max is implicitly
                  0. 3. If both tenantA and tenantB are running jobs such that current
                  usage for tenantA is lower than its min quota (e.g., 5 k80 GPUS)
                  while tenantB’s usage is higher than its min quota (e.g., 12 k80
                  GPUs), and both tenants have pending jobs requesting the remaining
                  clusterQueue of the cohort (the 3 k80 GPUs), then tenantA jobs will
                  get this remaining clusterQueue since tenantA is below its min limit.
                  4. If a tenantA workload doesn’t tolerate spot, then the workload
                  will only be eligible to consume on-demand cores (the next in the
                  list of cpu flavors). 5. Before considering on-demand, the workload
                  will get assigned spot if the quota can be borrowed from the cohort.
                  \n metadata: name: tenantA spec: cohort: borrowing-cohort resources:
                  - name: cpu - name: spot quota: min: 1000 - name: on-demand quota:
                  min: 100 - name: nvidia.com/gpus - name: k80 quota: min: 10 max:
                  20 labels: - cloud.provider.com/accelerator: nvidia-tesla-k80 -
                  name: p100 quota: min: 10 max: 20 labels: - cloud.provider.com/accelerator:
                  nvidia-tesla-p100 \n metadata: name: tenantB spec: cohort: borrowing-cohort
                  resources: - name: cpu - name: on-demand quota: min: 100 - name:
                  nvidia.com/gpus - name: k80 quota: min: 10 max: 20 labels: - cloud.provider.com/accelerator:
                  nvidia-tesla-k80 \n If empty, this ClusterQueue cannot borrow from
                  any other ClusterQueue and vice versa. \n The name style is similar
                  to label keys. These are just names to link QCs together, and they
                  are meaningless otherwise."
                type: string
              namespaceSelector:
                description: namespaceSelector defines which namespaces are allowed
                  to submit workloads to this clusterQueue. Beyond this basic support
                  for policy, an policy agent like Gatekeeper should be used to enforce
                  more advanced policies. Defaults to null which is a nothing selector
                  (no namespaces eligible). If set to an empty selector `{}`, then
                  all namespaces are eligible.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              queueingStrategy:
                default: BestEffortFIFO
                description: "QueueingStrategy indicates the queueing strategy of
                  the workloads across the queues in this ClusterQueue. This field
                  is immutable. Current Supported Strategies: \n - StrictFIFO: workloads
                  are ordered strictly by creation time. Older workloads that can't
                  be admitted will block admitting newer workloads even if they fit
                  available quota. - BestEffortFIFO：workloads are ordered by creation
                  time, however older workloads that can't be admitted will not block
                  admitting newer workloads that fit existing quota."
                enum:
                - StrictFIFO
                - BestEffortFIFO
                type: string
              resources:
                description: "resources represent the total pod requests of workloads
                  dispatched via this clusterQueue. This doesn’t guarantee the actual
                  availability of resources, although an integration with a resource
                  provisioner like Cluster Autoscaler is possible to achieve that.
                  Example: \n - name: cpu flavors: - quota: min: 100 - name: memory
                  flavors: - quota: min: 100Gi"
                items:
                  properties:
                    flavors:
                      description: "flavors is the list of different flavors of this
                        resource and their limits. Typically two different “flavors”
                        of the same resource represent different hardware models (e.g.,
                        gpu models, cpu architectures) or pricing (on-demand vs spot
                        cpus). The flavors are distinguished via labels and taints.
                        \n For example, if the resource is nvidia.com/gpu, and we
                        want to define different limits for different gpu models,
                        then each model is mapped to a flavor and must set different
                        values of a shared key. For example: \n spec: resources: -
                        name: nvidia.com/gpus - name: k80 quota: min: 10 - name: p100
                        quota: min: 10 \n The flavors are evaluated in order, selecting
                        the first to satisfy a workload’s requirements. Also the quantities
                        are additive, in the example above the GPU quota in total
                        is 20 (10 k80 + 10 p100). A workload is limited to the selected
                        type by converting the labels to a node selector that gets
                        injected into the workload. This list can’t be empty, at least
                        one flavor must exist."
                      items:
                        properties:
                          name:
                            default: default
                            description: name is a reference to the resourceFlavor
                              that defines this flavor.
                            type: string
                          quota:
                            description: quota is the limit of resource usage at a
                              point in time.
                            properties:
                              max:
                                anyOf:
                                - type: integer
                                - type: string
                                description: max is the upper limit on the amount
                                  of resource requests that can be used by workloads
                                  admitted by this ClusterQueue at a point in time.
                                  Resources can be borrowed from unused min quota
                                  of other ClusterQueues in the same cohort. If not
                                  null, it must be greater than or equal to min. If
                                  null, there is no upper limit for borrowing.
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              min:
                                anyOf:
                                - type: integer
                                - type: string
                                description: min amount of resource requests that
                                  are available to be used by workloads admitted by
                                  this ClusterQueue at a point in time. The sum of
                                  min quotas for a flavor in a cohort defines the
                                  maximum amount of resources that can be allocated
                                  by a ClusterQueue in the cohort.
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                            type: object
                        required:
                        - name
                        - quota
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - name
                      x-kubernetes-list-type: map
                    name:
                      description: name of the resource. For example, cpu, memory
                        or nvidia.com/gpu.
                      type: string
                  required:
                  - name
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
            type: object
          status:
            description: ClusterQueueStatus defines the observed state of ClusterQueue
            properties:
              admittedWorkloads:
                description: AdmittedWorkloads is the number of workloads currently
                  admitted to this clusterQueue and haven't finished yet.
                format: int32
                type: integer
              pendingWorkloads:
                description: PendingWorkloads is the number of workloads currently
                  waiting to be admitted to this clusterQueue.
                format: int32
                type: integer
              usedResources:
                additionalProperties:
                  additionalProperties:
                    properties:
                      borrowing:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Borrowed is the used quantity past the min quota,
                          borrowed from the cohort.
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      total:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Total is the total quantity of the resource used,
                          including resources borrowed from the cohort.
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    type: object
                  type: object
                description: usedResources are the resources (by flavor) currently
                  in use by the workloads assigned to this clusterQueue.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
